<main>
    <div class="row" style="margin: 20px;">
        <div class="col s12">
            <div class="col s12 m6" style="">
                <div id="matriculas" style="width:500px; height:400px;"></div>
            </div>
            <div class="col s12 m6">
                <div id="entradas" style="width:500px; height:400px;"></div>
            </div>
        </div>
        <div class="col s12">
            <div class="col s12 m6">
                <div id="cajas" style="width:500px; height:400px;"></div>
            </div>
            <div class="col s12 m6">
                <div id="salidas" style="width:500px; height:400px;"></div>
            </div>
        </div>


    </div>
    <div class="row">
        <p style="color:transparent">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
    </div>

    <div class="row">
        <p style="color:transparent">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
    </div>
</main>


@section scripts{
    <div>
        <script>
        var vapp = new Vue({
            el: 'main',
            data: {
                active: 1
            },
            methods: {
                MantenerBloque: function (index) {
                    var self = this;
                    var txtprompt = index >= 0 ? self.bloques[index].Denominacion : "";
                    var id = index >= 0 ? self.tablaSelectId : 0;
                    swal.fire({
                        title: 'Bloques',
                        input: 'text',
                        inputValue: txtprompt,
                        inputAttributes: {
                            autocapitalize: 'off'
                        },
                        preConfirm: (cambio) => {
                             var bloque = {
                                Id: id,
                                Denominacion: cambio
                            };

                            return $.post('@Url.Action("MantenerBloque", "Home")',
                                { pBloque: bloque })
                                .done(function (data) {
                                    if (data)
                                        return data;
                                    else {
                                        Swal.showValidationMessage(
                                            `Error: ${data.message}`
                                        );
                                    }
                                });
                        },
                        allowOutsideClick: () => !Swal.isLoading()
                    }).then(function (result) {
                        if (result.value) {
                            if (index < 0) {
                                self.bloques.push(result.value);
                            }
                            else {
                                self.bloques[index].Denominacion = result.value.Denominacion;
                            }
                        }
                    });
                },
                MantenerServicio: function (index) {
                    var self = this;
                    var servicioid = index >= 0 ? this.servicios[index].Id : 0;
                    var txtprompt = index >= 0 ? self.servicios[index].Denominacion : "";
                    var chkServicio = index >= 0 ? (self.servicios[index].Estado ? "checked" : "") : "checked";
                    var bloqueid =  self.tablaSelectId ;


                    Swal.fire({
                        title: (index >= 0 ? 'Editar':'Nuevo') + ' Servicio',
                        html:
                          '<input id="swal-input1" class="swal2-input" value="' + txtprompt + '" placeholder="Nombre Examen">' +
                          '<label><input type="checkbox" class="" id="chkabcd" ' + chkServicio + '/><span>Estado</span></label>',
                        focusConfirm: false,
                        preConfirm: () => {
                            return [
                              document.getElementById('swal-input1').value,
                              document.getElementById('chkabcd').checked
                            ]
                        },
                        allowOutsideClick: () => !Swal.isLoading()
                    }).then((result) => {
                        if (result.value) {
                            var servicio = {
                                Id: servicioid,
                                Denominacion: result.value[0],
                                Estado: result.value[1],
                                BloqueId: bloqueid
                            };
                            $.ajax({
                                type: 'POST',
                                dataType: 'json',
                                url: '@Url.Action("MantenerServicio", "Home")',
                                data: { pServicio: servicio },
                                success: function (res) {
                                    if (index < 0) {
                                        self.servicios.push(res);
                                    }
                                    else {
                                        self.servicios[index].Denominacion = res.Denominacion;
                                        self.servicios[index].Estado = res.Estado;
                                    }
                                },
                                error: function (req, status, err) {
                                    alert('Ocurrio un error: ' + err);
                                }
                            });
                        }
                    });
                },
                MantenerVentanilla: function (index) {
                    var self = this;
                    var txtprompt = index >= 0 ? self.ventanillas[index].Denominacion : "";
                    var id = index >= 0 ? self.ventanillas[index].Id : 0;
                    var servicioid = self.servicioSelectId ;
                    //console.log(servicioid);

                    swal.fire({
                        title: 'Ventanillas',
                        input: 'text',
                        inputValue: txtprompt,
                        inputAttributes: {
                            autocapitalize: 'off'
                        },
                        preConfirm: (cambio) => {
                            var ventanilla = {
                                Id: id,
                                Denominacion: cambio,
                                ServicioId:servicioid
                            };

                            return $.post('@Url.Action("MantenerVentanilla", "Home")',
                                { pVentanilla: ventanilla })
                                .done(function (data) {
                                    if (data)
                                        return data;
                                    else {
                                        Swal.showValidationMessage(
                                            `Error: ${data.message}`
                                        );
                                    }
                                });
                        },
                        allowOutsideClick: () => !Swal.isLoading()
                    }).then(function (result) {
                        if (result.value) {
                            if (index < 0) {
                                self.ventanillas.push(result.value);
                            }
                            else {
                                self.ventanillas[index].Denominacion = result.value.Denominacion;
                            }
                        }
                    });
                },
                CargarBloque: function () {
                    var self = this;
                    $.get('@Url.Action("ListarBloque", "Home")', {}, function (d) {
                        self.bloques = d;
                    });
                },
                CargarServicio: function (id) {
                    var self = this;
                    $.get('@Url.Action("ListarServicio", "Home")', { pBloqueId: id }, function (d) {
                        self.servicios = d;
                        self.servicioSelectId = 0;
                    });
                },
                CargarVentanilla: function (id) {
                    var self = this;
                    $.get('@Url.Action("ListarVentanilla", "Home")', { pServicioId: id }, function (d) {
                        self.ventanillas = d;
                    });
                }
            }
        });
        </script>
    </div>
}


<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="~/Scripts/Canvas/canvasjs.min.js"></script>

<script type="text/javascript">

	$(function () {
        var matriculas = new CanvasJS.Chart("matriculas", {
            title: {
                text: "Matriculas"
            },
            animationEnabled: true,
            legend: {
                verticalAlign: "center",
                horizontalAlign: "left",
                fontSize: 15,
                fontFamily: "Helvetica"
            },
            theme: "light2",
            data: [
            {
                type: "pie",
                indexLabelFontFamily: "Garamond",
                indexLabelFontSize: 20,
                indexLabel: "{label} {y}%",
                startAngle: -20,
                showInLegend: true,
                toolTipContent: "{legendText} {y}%",
                dataPoints: [
                    { y: 32.48, legendText: "2020-I", label: "2020-I" },
                    { y: 25.39, legendText: "2019-II", label: "2019-II" },
                    { y: 20.78, legendText: "2019-I", label: "2019-I" },
                    { y: 15.14, legendText: "2018-II", label: "2018-II" },
                    { y: 6.21, legendText: "2018-I", label: "2018-I" }
                ],

                //You can add dynamic data from the controller as shown below. Check the controller and uncomment the line which generates dataPoints.
                //dataPoints: @Html.Raw(ViewBag.DataPoints),
            }
            ]
        });
        matriculas.render();

		var entradas = new CanvasJS.Chart("entradas", {
			theme: "light2",
			animationEnabled: true,
			title: {
				text: "Entradas Caja"
            },
			data: [
			{
				type: "line", //change type to bar, line, area, pie, etc
				dataPoints: [
				{ x: 10, y: 71 },
				{ x: 20, y: 55 },
				{ x: 30, y: 50 },
				{ x: 40, y: 65 },
				{ x: 50, y: 95 },
				{ x: 60, y: 68 },
				{ x: 70, y: 28 },
				{ x: 80, y: 34 },
				{ x: 90, y: 14 }
				],

				//You can add dynamic data from the controller as shown below. Check the controller and uncomment the line which generates dataPoints.
				//dataPoints: @Html.Raw(ViewBag.DataPoints),

			}
			]
        });
        entradas.render();

        var cajas = new CanvasJS.Chart("cajas", {
            title: {
                text: "Total Cajas x Mes"
            },
            animationEnabled: true,
            legend: {
                cursor: "pointer",
                itemclick: function (e) {
                    if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                        e.dataSeries.visible = false;
                    }
                    else {
                        e.dataSeries.visible = true;
                    }
                    chart.render();
                }
            },
            axisY: {
                title: "Total"
            },
            toolTip: {
                shared: true,
                content: function (e) {
                    var str = '';
                    var total = 0;
                    var str3;
                    var str2;
                    for (var i = 0; i < e.entries.length; i++) {
                        var str1 = "<span style= 'color:" + e.entries[i].dataSeries.color + "'> " + e.entries[i].dataSeries.name + "</span>: <strong>" + e.entries[i].dataPoint.y + "</strong> <br/>";
                        total = e.entries[i].dataPoint.y + total;
                        str = str.concat(str1);
                    }
                    str2 = "<span style = 'color:DodgerBlue; '><strong>" + e.entries[0].dataPoint.label + "</strong></span><br/>";
                    str3 = "<span style = 'color:Tomato '>Total: </span><strong>" + total + "</strong><br/>";

                    return (str2.concat(str)).concat(str3);
                }

            },
            data: [
            {
                type: "bar",
                showInLegend: true,
                name: "CAJA A",
                color: "gold",
                dataPoints: [
                    { label: "Enero", y: 243 },
                    { label: "Febrero", y: 273 },
                    { label: "Marzo", y: 525 },
                    { label: "Abril", y:1118 }
                ],

                //You can add dynamic data from the controller as shown below. Check the controller and uncomment the line which generates dataPoints.
                //dataPoints: @Html.Raw(ViewBag.DataPoints),
            },
            {
                type: "bar",
                showInLegend: true,
                name: "CAJA B",
                color: "silver",
                dataPoints: [
                    { label: "Enero", y:272 },
                    { label: "Febrero", y:299 },
                    { label: "Marzo", y:419 },
                    { label: "Abril", y:896 }
                ],

                //You can add dynamic data from the controller as shown below. Check the controller and uncomment the line which generates dataPoints.
                //dataPoints: @Html.Raw(ViewBag.DataPoints),
            },
            {
                type: "bar",
                showInLegend: true,
                name: "CAJA C",
                color: "#A57164",
                dataPoints: [
                    { label: "Enero", y:307 },
                    { label: "Febrero", y:301 },
                    { label: "Marzo", y:392 },
                    { label: "Abril", y:788 }
                ],

                //You can add dynamic data from the controller as shown below. Check the controller and uncomment the line which generates dataPoints.
                //dataPoints: @Html.Raw(ViewBag.DataPoints),
            }

            ]
        });
        cajas.render();

		var salidas = new CanvasJS.Chart("salidas", {
			theme: "light2",
			animationEnabled: true,
			title: {
				text: "Salidas Caja"
            },
			data: [
			{
				type: "line", //change type to bar, line, area, pie, etc
				dataPoints: [
				{ x: 10, y: 71 },
				{ x: 20, y: 55 },
				{ x: 30, y: 50 },
				{ x: 40, y: 65 },
				{ x: 50, y: 95 },
				{ x: 60, y: 68 },
				{ x: 70, y: 28 },
				{ x: 80, y: 34 },
				{ x: 90, y: 14 }
				],

				//You can add dynamic data from the controller as shown below. Check the controller and uncomment the line which generates dataPoints.
				//dataPoints: @Html.Raw(ViewBag.DataPoints),

			}
			]
        });
        salidas.render();

    });

</script>
